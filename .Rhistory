library(Starfish)
data("example_sv")
example_sv
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
library(Starfish)
data("example_sv")
data("example_cnv")
data("example_sample")
head(example_sv)
head(example_sv)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
library(Starfish)
head(example_sv)
nrow(example_sv)
tail(example_sv)
head(example_sv)
example_sv[1,]
head(example_sample)
?starfish_link
?starfish_link
starfish_link(example_sv, prefix = "example")
knit_with_parameters('D:/work/UC/script/starfish_tutorial.Rmd', encoding = 'UTF-8')
starfish_link(example_sv, prefix = "example")
Packages <- c("ShatterSeek","GenomeInfoDb","plyr","data.table","GenomicRanges","IRanges","MASS","ggplot2","grid","gridExtra","dplyr","ConsensusClusterPlus","factoextra","gplots","ggpubr","reshape2","cowplot","scales","patchwork","Cairo","ggforce")
lapply(Packages, library, character.only = TRUE)
starfish_link(example_sv, prefix = "example")
?starfish_all
starfishlink=starfish_link(example_sv, prefix = "example")
head(head(starfishlink$interleave_tra_complex_sv))
head(starfishlink$mergecall)
head(head(starfishlink$starfish_call))
?starfish_feature
head(starfish_feature_out)
starfish_feature_out=starfish_feature(starfish_link_out$starfish_call,starfish_link_out$interleave_tra_complex_sv,example_cnv,example_sample,prefix = "example")
starfish_link_out=starfish_link(example_sv, prefix = "example")
starfish_feature_out=starfish_feature(starfish_link_out$starfish_call,starfish_link_out$interleave_tra_complex_sv,example_cnv,example_sample,prefix = "example")
starfish_feature_out$cnv_baseline
head(head(starfish_feature$cluster_feature))
head(head(starfish_feature$cluster_feature))
head(starfish_feature$cluster_feature)
head(starfish_feature_out$cluster_feature)
starfish_sig_out=starfish_sig(starfish_feature_out$cluster_feature,prefix = "example",class_method = "class")
head(starfish_sig(starfish_feature_out$cluster_feature,prefix = "example",class_method = "class"))
setwd("D:/work/UC/Starfish/tutorial")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
starfish_plot(example_sv,example_cnv,starfish_link_out$starfish_call)
library(Starfish)
Packages <- c("ShatterSeek","GenomeInfoDb","plyr","data.table","GenomicRanges","IRanges","MASS","ggplot2","grid","gridExtra","dplyr","ConsensusClusterPlus","factoextra","gplots","ggpubr","reshape2","cowplot","scales","patchwork","Cairo","ggforce")
lapply(Packages, library, character.only = TRUE)
starfish_plot(example_sv,example_cnv,starfish_link_out$starfish_call)
Packages <- c("ShatterSeek","GenomeInfoDb","plyr","data.table","GenomicRanges","IRanges","MASS","ggplot2","grid","gridExtra","dplyr","ConsensusClusterPlus","factoextra","gplots","ggpubr","reshape2","cowplot","scales","patchwork","Cairo","ggforce")
lapply(Packages, library, character.only = TRUE)
library(Starfish)
setwd("D:/work/UC/Starfish/tutorial")
starfish_link_out=starfish_link(example_sv, prefix = "example")
starfish_feature_out=starfish_feature(starfish_link_out$starfish_call,starfish_link_out$interleave_tra_complex_sv,example_cnv,example_sample,prefix = "example")
starfish_sig_out=starfish_sig(starfish_feature_out$cluster_feature,prefix = "example",class_method = "class")
starfish_plot(sv_file, cnv_file, cgr, genome_v = "hg19")
starfish_plot(example_sv,example_cnv,starfish_link_out$starfish_call)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
starfish_plot(example_sv,example_cnv,starfish_link_out$starfish_call)
Packages <- c("ShatterSeek","GenomeInfoDb","plyr","data.table","GenomicRanges","IRanges","MASS","ggplot2","grid","gridExtra","dplyr","ConsensusClusterPlus","factoextra","gplots","ggpubr","reshape2","cowplot","scales","patchwork","Cairo","ggforce")
lapply(Packages, library, character.only = TRUE)
library(Starfish)
starfish_plot(example_sv,example_cnv,starfish_link_out$starfish_call)
head(starfish_link_out)
starfish_link_out=starfish_link(example_sv, prefix = "example")
starfish_feature_out=starfish_feature(starfish_link_out$starfish_call,starfish_link_out$interleave_tra_complex_sv,example_cnv,example_sample,prefix = "example")
starfish_sig_out=starfish_sig(starfish_feature_out$cluster_feature,prefix = "example",class_method = "class")
starfish_plot(example_sv,example_cnv,starfish_link_out$starfish_call)
?knitr::include_graphics
setwd("D:/work/UC/pcawg")
example_sv=read.csv("pcawg_all_brk_insl_hom_split.csv",header = T,stringsAsFactors = F)
example_cnv=read.csv("pcawg_neighbor_merging_cnv_gender_wgd.csv",header = T,stringsAsFactors = F)
example_sample=read.csv("starfish_example_plot.csv",header = T,stringsAsFactors = F)
example_sample=example_sample[example_sample$select=="yes",]
example_sv=example_sv[example_sv$sample %in% example_sample$sample,]
example_sv$svtype=example_sv$sv
example_cnv=example_cnv[example_cnv$sample %in% example_sample$sample,]
example_sv=unique(example_sv[c("chrom1","end1","chrom2","end2","strand1","strand2","svtype","sample")])
colnames(example_sv)=c("chrom1","pos1","chrom2","pos2","strand1","strand2","svtype","sample")
example_cnv=unique(example_cnv[c("chromosome","start","end","total_cn","sample")])
example_sample=example_sample[c("sample","gender")]
head(example_sv)
head(example_cnv)
head(example_sample)
library(devtools)
library(roxygen2)
# library(neuralnet)
setwd("D:/work/UC/Starfish/Starfish")
############## install rtools ###########
# writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
# setwd("D:/work/UC/pcawg")
# hg19_chr_length=read.csv("hg19_chr_arm_length.csv")
# hg38_chr_length=read.csv("hg38_chr_arm_length.csv")
# setwd("D:/work/UC/Starfish/Starfish")
# usethis::use_data(hg19_chr_length)
# usethis::use_data(hg38_chr_length)
setwd("D:/work/UC/pcawg")
example_sv=read.csv("pcawg_all_brk_insl_hom_split.csv",header = T,stringsAsFactors = F)
example_cnv=read.csv("pcawg_neighbor_merging_cnv_gender_wgd.csv",header = T,stringsAsFactors = F)
example_sample=read.csv("starfish_example_plot.csv",header = T,stringsAsFactors = F)
example_sample=example_sample[example_sample$select=="yes",]
example_sv=example_sv[example_sv$sample %in% example_sample$sample,]
example_sv$svtype=example_sv$sv
example_cnv=example_cnv[example_cnv$sample %in% example_sample$sample,]
example_sv=unique(example_sv[c("chrom1","end1","chrom2","end2","strand1","strand2","svtype","sample")])
colnames(example_sv)=c("chrom1","pos1","chrom2","pos2","strand1","strand2","svtype","sample")
example_cnv=unique(example_cnv[c("chromosome","start","end","total_cn","sample")])
example_sample=example_sample[c("sample","gender")]
setwd("D:/work/UC/Starfish/test")
write.csv(example_sv,"example_sv.csv",row.names = F)
write.csv(example_cnv,"example_cnv.csv",row.names = F)
write.csv(example_sample,"example_sample.csv",row.names = F)
setwd("D:/work/UC/Starfish/Starfish")
usethis::use_data(example_sv)
usethis::use_data(example_cnv)
usethis::use_data(example_sample)
##### create package #####
# devtools::create("Starfish")
####### update document #########
############ load data ############
# pcawg_chrss_raw=read.csv("pcawg_chrss_cluster_sv_dispersion.csv",header = T,stringsAsFactors = F)
# load("pcawg_chrss_cluster_neural_network_without_insertion_8_round3.rda")
#
#
#
#
# usethis::use_data(pcawg_chrss_raw)
# usethis::use_data(nn_model)
# usethis::use_data(chr_length)
###################################
########### install library ##############
devtools::document()
devtools::load_all()
devtools::install()
library(devtools)
library(roxygen2)
# library(neuralnet)
setwd("D:/work/UC/Starfish/Starfish")
############## install rtools ###########
# writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
# setwd("D:/work/UC/pcawg")
# hg19_chr_length=read.csv("hg19_chr_arm_length.csv")
# hg38_chr_length=read.csv("hg38_chr_arm_length.csv")
# setwd("D:/work/UC/Starfish/Starfish")
# usethis::use_data(hg19_chr_length)
# usethis::use_data(hg38_chr_length)
setwd("D:/work/UC/pcawg")
example_sv=read.csv("pcawg_all_brk_insl_hom_split.csv",header = T,stringsAsFactors = F)
example_cnv=read.csv("pcawg_neighbor_merging_cnv_gender_wgd.csv",header = T,stringsAsFactors = F)
example_sample=read.csv("starfish_example_plot.csv",header = T,stringsAsFactors = F)
example_sample=example_sample[example_sample$select=="yes",]
example_sv=example_sv[example_sv$sample %in% example_sample$sample,]
example_sv$svtype=example_sv$sv
example_cnv=example_cnv[example_cnv$sample %in% example_sample$sample,]
example_sv=unique(example_sv[c("chrom1","end1","chrom2","end2","strand1","strand2","svtype","sample")])
colnames(example_sv)=c("chrom1","pos1","chrom2","pos2","strand1","strand2","svtype","sample")
example_cnv=unique(example_cnv[c("chromosome","start","end","total_cn","sample")])
example_sample=example_sample[c("sample","gender")]
setwd("D:/work/UC/Starfish/test")
write.csv(example_sv,"example_sv.csv",row.names = F)
write.csv(example_cnv,"example_cnv.csv",row.names = F)
write.csv(example_sample,"example_sample.csv",row.names = F)
setwd("D:/work/UC/Starfish/Starfish")
usethis::use_data(example_sv)
usethis::use_data(example_cnv)
usethis::use_data(example_sample)
##### create package #####
# devtools::create("Starfish")
####### update document #########
############ load data ############
# pcawg_chrss_raw=read.csv("pcawg_chrss_cluster_sv_dispersion.csv",header = T,stringsAsFactors = F)
# load("pcawg_chrss_cluster_neural_network_without_insertion_8_round3.rda")
#
#
#
#
# usethis::use_data(pcawg_chrss_raw)
# usethis::use_data(nn_model)
# usethis::use_data(chr_length)
###################################
########### install library ##############
devtools::document()
devtools::load_all()
devtools::install()
